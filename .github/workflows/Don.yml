name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set hostname to biralo
        run: sudo hostnamectl set-hostname biralo

      - name: Download VPS backup (if any)
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y curl unzip sudo net-tools neofetch rsync zip

      - name: Install Tailscale official script
        run: curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore entire VPS from backup
        run: |
          if ls ./backup/backup.zip.part* 1> /dev/null 2>&1; then
            cat ./backup/backup.zip.part* > full-backup.zip
            unzip -o full-backup.zip -d /
            echo "Backup restored."
          else
            echo "No backup found, starting fresh."
          fi

      - name: Restore Tailscale state
        run: |
          if [ -f /opt/vps-backup/data/tailscaled.state ]; then
            sudo mkdir -p /var/lib/tailscale
            sudo cp /opt/vps-backup/data/tailscaled.state /var/lib/tailscale/tailscaled.state
            sudo chmod 600 /var/lib/tailscale/tailscaled.state
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=biralo || echo "Tailscale already up"
          echo "Tailscale IPv4:"
          tailscale ip -4 || echo "Tailscale IP not found"

      - name: Create user biralo with sudo
        run: |
          if ! id -u biralo >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash biralo
            echo "biralo:biralo" | sudo chpasswd
            sudo usermod -aG sudo biralo
            echo "biralo ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/biralo
          fi

      - name: Keep VPS alive for 6 hours
        run: sleep 21600

      - name: Backup ENTIRE VPS (split into parts)
        run: |
          sudo mkdir -p /opt/vps-backup/data
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ || true
          sudo rsync -aAX --exclude={"/proc/*","/sys/*","/dev/*","/tmp/*","/run/*","/mnt/*","/media/*","/boot/*","/backup/*","/opt/vps-backup/*"} / /opt/vps-backup/full-system/
          sudo chown -R $USER:$USER /opt/vps-backup
          zip -r full-backup.zip /opt/vps-backup
          split -b 450M full-backup.zip backup.zip.part

      - name: Upload VPS backup artifact (all parts)
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip.part*
          retention-days: 90          echo "tmate SSH session:"
          tmate show-messages || echo "Could not get tmate link"

      - name: Sleep to keep VPS alive
        run: sleep 21600

      - name: Backup ENTIRE VPS (split into parts)
        run: |
          sudo mkdir -p /opt/vps-backup/data
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ || true

          # Copy everything except temp/system dirs
          sudo rsync -aAX --exclude={"/proc/*","/sys/*","/dev/*","/tmp/*","/run/*","/mnt/*","/media/*","/boot/*","/backup/*","/opt/vps-backup/*"} / /opt/vps-backup/full-system/

          sudo chown -R $USER:$USER /opt/vps-backup

          # Create one big zip
          zip -r full-backup.zip /opt/vps-backup

          # Split into 450MB chunks to stay safe under GitHub's 500MB limit
          split -b 450M full-backup.zip backup.zip.part

      - name: Upload VPS backup artifact (all parts)
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip.part*
          retention-days: 90
